/// @arg hud_details_panel
/// @arg next_y_offset
var container = argument0;
var next_y_offset = argument1;

var panel_font = font_small;
var font_h = font_get_size(panel_font);
var line_height = font_h + 14; // 14 to fit grid show buttons
var text_halign = fa_left;
var text_valign = fa_top;

with(container)
{
	var content_left = left + padding;
	var tab = floor((right - left - 2*padding)/3);
	// grid - role - value
	for(var grid_type = 0; grid_type < macro_grid_type_count; grid_type++)
	{
		if(!scr_has_grid_props(unit, grid_type)) continue;
		
		var grid_string = scr_grid_type_to_string(grid_type);
				
		var gridlabel = scr_create_gui_item_text(container, content_left, next_y_offset, panel_font, grid_string);
		gridlabel.tooltip_title = "Grid type";
		gridlabel.tooltip_description = "There are 4 different grid types: electric, water, oxygen and hydrogen.";
				
		var role_s = "";
		var role = scr_get_grid_prop(unit, grid_type, macro_grid_prop_role);
		switch(role)
		{
			case macro_grid_role_carrier: role_s = "carrier"; break;
			case macro_grid_role_source: role_s = "source"; break;
			case macro_grid_role_consumer: role_s = "consumer"; break;
			case macro_grid_role_storage: role_s = "storage"; break;
		}
		var role_label = scr_create_gui_item_text(container, content_left + tab, next_y_offset, panel_font, role_s);
		// role_label.tooltip_text = "Role in grid";
		role_label.tooltip_title = "Role in grid";
		role_label.tooltip_description = "All components connected to a grid play one of four roles: Carrier - connects adjacent components to grid, Source - generates resource of grid type, Consumer - depletes the resource, or Storage - stores excess generated by sources up to capacity.";
				
		var val = scr_get_grid_prop(unit, grid_type, macro_grid_prop_value);
		var val_label = scr_create_gui_item_text(container, content_left + 2*tab, next_y_offset, panel_font, string(val));
		val_label.tooltip_title = "Value";
		val_label.tooltip_description = "The meaning of the value depends on the role: Source - the amount generated per second, Consumer - the amount consumed per second, Storage - the amount that the component can store.";
				
		// grid button
		var grid = scr_get_grid(unit, grid_type);
		var grid_btn = scr_create_gui_state_button(container, right - padding - 24, next_y_offset, spr_eye_16, 4, details_panel_action.show_grid_details, scr_button_state_grid_show);
		grid_btn.grid = grid;
		grid_btn.tooltip_title = "Show grid details";
				
		next_y_offset += line_height;
	}
}

return next_y_offset;